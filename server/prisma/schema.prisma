generator client {
  provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url = env("PSQL_CONNECTION_MERRY_MATCH")
}

// table name will ref your table name you definded
// ? optional (null)
// ! required (not null)
model user {
      id                  String      @id @default(uuid())
      username            String      @unique @db.VarChar(50)
      password            String      @db.VarChar(255)
      name                String      @db.VarChar(50)
      birth_date          DateTime
      location            String?     @db.VarChar(255)
      city                String?     @db.VarChar(100) 
      email               String      @unique @db.VarChar(100)
      sexual_identity     String?     @db.VarChar(50) 
      sexual_preference   String?     @db.VarChar(50)
      racial_preference   String?     @db.VarChar(50)
      meeting_interest    String?     @db.VarChar(100)
      hobbies             Json        
      about_me            String?     @db.VarChar(150)
      created_at          DateTime    @default(now())
      updated_at          DateTime    @updatedAt
      last_logged_in      DateTime?

      merry_list              merry_list[]
      photo                   photo[]
      received_notifications  notifications[] @relation(name: "Recipient")
      sent_notifications      notifications[] @relation(name: "Sender")

      @@index([id])
}

model photo {
      id                   String       @id @default(uuid())
      user_id              String
      path                 String?
      status               status       @default(active)
      created_at           DateTime     @default(now())
      updated_at           DateTime     @updatedAt

      user                 user         @relation(fields: [user_id], references: [id])
      
      @@index([id])
}

model merry_list {
      id                   String       @id @default(uuid())
      user                 user         @relation(fields: [user_id], references: [id])
      user_id              String
      created_at           DateTime     @default(now())
      updated_at           DateTime     @updatedAt

      @@index([id])
}

model merry_status {
      id                   String       @id @default(uuid())
      status               String       
      mer_id               String       @default(uuid())
      user_id              String       @default(uuid())

      @@index([id])
}

model notifications {
      id                      String      @id @default(uuid())
      user_noti_recipient     user        @relation(name: "Recipient", fields: [noti_recipient_id], references: [id])
      noti_recipient_id       String      

      user_noti_sender        user        @relation(name: "Sender", fields: [noti_sender_id], references: [id])
      noti_sender_id          String      

      noti_message            String      @db.VarChar(100)
      noti_read               Boolean     @default(false)


      @@index([id])
}

enum status {
  active
  inactive
}